#!/usr/bin/python3
# -*- coding: utf-8 -*-

# Игра

# Ограничение времени	2 секунды
# Ограничение памяти	64Mb
# Ввод	стандартный ввод или input.txt
# Вывод	стандартный вывод или output.txt
# Петя и Вася играют в игру: они по очереди берут из колоды карточки, на которых написаны целые неповторяющиеся положительные числа (первый карточку всегда берет Петя). Карточки игроки берут по одной сверху колоды. После этого они сравнивают значения, записанные на карточках: игрок, у которого меньше, тянет ещё одну карточку и оставляет её у себя. Когда все карточки заканчиваются, Петя и Вася считают сумму значений, написанных на этих карточках. Проигрывает тот, у кого сумма получается меньше, чем у другого игрока.
# Им надоело вручную тянуть карточки и сравнивать значения. Они попросили вас написать программу, которая по исходному набору карточек будет определять победителя.
# Гарантируется, что для любого теста победителя можно будет определить однозначно.
# Формат ввода

# В первой строке входных данных записано целое число 
# n
# , кратное трём, — общее количество карточек (
# 3
# ≤
# n
# ≤
# 9
# 9
# 9
# ).
# В следующей строке записаны 
# n
#  различных целых положительных чисел 
# a
# i
#  — значения, написанные на карточках в том порядке, в котором Петя и Вася будут их раздавать (
# 1
# ≤
# a
# i
# ≤
# 1
# 0
# 0
# 0
# ).
# Формат вывода

# В единственной строке выведите Petya, если в игре побеждает Петя, или Vasya, если в игре побеждает Вася.
# Пример 1

# Ввод	Вывод
# 3
# 1 2 3
# Petya
# Пример 2

# Ввод	Вывод
# 3
# 1 4 2
# Vasya


with open('input.txt') as f:
	n = int(f.readline())
	ais = f.readline()
ais=[int(ai) for ai in ais.split()]

def distribute(ais):
	Petya = [ais[0]]
	Vasya = [ais[1]]
	p_sum, v_sum= Petya[-1], Vasya[-1]
	indx=None
	end_one = 1
	for i in ais[2:]:
		print(i, p_sum, v_sum)
		if indx == 0:
			Petya.append(i)
			indx=None
			end_one=0
			continue
		if indx == 1:
			Vasya.append(i)
			indx=None
			end_one=1
			continue
		if Petya[-1]<Vasya[-1]:
			Petya.append(i)
			p_sum+=i
			indx=0
			continue
		if Petya[-1]>Vasya[-1]:
			Vasya.append(i)
			v_sum+=i
			indx=1
			continue
		if end_one == 0:
			Vasya.append(i)
			v_sum+=i
			indx=1
			continue
		if end_one == 1:
			Petya.append(i)
			v_sum+=i
			indx=0
			continue

	if p_sum>v_sum:
		return 'Petya'
	else:
		return 'Vasya'

print(distribute(ais))